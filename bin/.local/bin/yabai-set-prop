#!/usr/bin/env zsh

usage() { cat <<-EOF
	Usage: $0 [options] [window_id]

	set properties of windows for yabai that only have toggle methods.

	window_id			the id of the window to set properties on. If not provided, the
								CURRENT window is used.

	Options:
		-h, --help     Show this help message and exit
		-f, --float    enable floating
		-F, --nofloat  disable floating
		-t, --top      enable topmost
		-T, --notopmost    disable topmost
		-s, --sticky   enable sticky
		-S, --nosticky disable sticky
	EOF
}

label=$(basename $0)
exec 2> >(while read -r line; do echo "$label: $line" >> /tmp/kitty-quick-window.log; done)

zparseopts -D -E -A opts f -float t -top s -sticky h -help F -nofloat T -notopmost S -nosticky

if [[ -n ${opts[(i)-h]} || -n ${opts[(i)--help]} ]]; then
	usage
	exit 0
fi

window_id=$1
echo "looking for $1" >> /tmp/kitty-quick-window.log
CURRENT=$(yabai -m query --windows --window $window_id)

current_float=$(echo $CURRENT | jq '.["is-floating"]')
if [[ -n $opts[(i)-f] ]]; then
	if [[ "$current_float" = "false" ]]; then
		yabai -m window --toggle float $window_id
	fi
elif [[ -n $opts[(i)-F] ]]; then
	if [[ "$current_float" = "true" ]]; then
		yabai -m window --toggle float $window_id
	fi
fi

current_top=$(echo $CURRENT | jq '.["is-topmost"]')
if [[ -n $opts[(i)-t] ]]; then
	if [[ "$current_top" = "false" ]]; then
		yabai -m window --toggle topmost $window_id
	fi
elif [[ -n $opts[(i)-T] ]]; then
	if [[ "$current_top" = "true" ]]; then
		yabai -m window --toggle topmost $window_id
	fi
fi

current_sticky=$(echo $CURRENT | jq '.["sticky"]')
if [[ -n $opts[(i)-s] ]]; then
	if [[ "$current_sticky" = "false" ]]; then
		yabai -m window --toggle sticky $window_id
	fi
elif [[ -n $opts[(i)-S] ]]; then
	if [[ "$current_sticky" = "true" ]]; then
		yabai -m window --toggle sticky $window_id
	fi
fi
