# OPTIONS

# -- GLOBAL OPTIONS -------------------------------------------------------- {{{

# set-option -g default-command "reattach-to-user-namespace -l zsh"

set -g display-time 4000
set -g mouse on
set -g renumber-windows on
set -g history-limit 999999
set -g main-pane-width 33% # main is left by default, "swap" with right
set -g main-pane-height 75%
set -g base-index 1
setw -g pane-base-index 1
set -g repeat-time 1000
setw -g aggressive-resize on # more reasonable sizing with multiple clients

# Add truecolor support
set -g default-terminal "xterm-256color-italic"
set -ga terminal-overrides ",xterm*:Tc:smcup@:rmcup@"
set -ga terminal-overrides ",screen*:Tc:smcup@:rmcup@"
set -ga terminal-overrides ",tmux*:Tc:smcup@:rmcup@"

# }}}

# -- THEME ----------------------------------------------------------------- {{{
# Reference: https://man.openbsd.org/tmux.1#STYLES

set -g visual-activity on

set -g message-command-style bg=cyan,fg=colour233
set -g message-style bg=yellow,fg=black

set -g pane-active-border-style fg=colour6
set -g pane-border-lines single
set -g pane-border-style fg=colour8

set -g status-interval 60
set -g status-justify absolute-centre
set -g status-style bg=colour0,fg=colour8
set -g status-left '#[fg=cyan] #S #[fg=colour8] '
set -g status-left-length 40
set -g status-right '#[fg=colour8]@#I.#P #[fg=cyan]%H:%M ' # $DOTDIR/omz-custom/themes/bleep.zsh-theme
set -g status-right-length 50

set -g window-status-format " #I  #W"
set -g window-status-current-format "#[fg=black,bg=cyan] #I #[bg=default,fg=white] #W"
set -g window-status-separator "#[fg=colour8] Â· #[default]"

# }}}

# KEYBINDS

# -- CHANGE PREFIX --------------------------------------------------------- {{{

unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix
set -s escape-time 0 # "fixes" escape key waiting for another key to send it with alt (or something like that)

# }}}

# -- REPLACE DEFAULTS ------------------------------------------------------ {{{
bind-key f popup -w 50 -E $DOTDIR/bin/tmux-findwin -a # better c-a f using gum
# }}}

# -- NAVIGATION ------------------------------------------------------------ {{{

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key 6 switch-client -l

# make n/p repeatable
bind-key -r n next-window
bind-key -r p previous-window
# }}}

# -- LAYOUT ---------------------------------------------------------------- {{{

bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r - resize-pane -D 5
bind-key -r + resize-pane -U 5

bind-key -Tlayout 1 select-layout main-horizontal
bind-key -Tlayout 2 select-layout main-vertical
bind-key -Tlayout = select-layout tiled
bind-key -Tlayout m resize-pane -x 66% -y 75%
bind-key -Tlayout s resize-pane -x 36% -y 25%
bind-key -Tlayout -r n next-layout
bind-key -Tlayout -r p previous-layout
bind-key -Tlayout -r u select-layout -o # undo last change
bind-key Space switch-client -Tlayout
# -- }}}

# -- CREATE (shift) -------------------------------------------------------- {{{
# using shift because I was creating splits when I actually just wanted to
# navigate to other windows. Hence forcing me to move pinky to a different key.

# create splits
bind-key H split-window -hbf -p 33
bind-key J split-window -f -p 25
bind-key K split-window -bf -p 75
bind-key L split-window -hf -p 66

# quick project chooser
bind-key S popup -w 80 -h 10 $DOTDIR/bin/tmux-qp

# quick-access
bind-key D neww $DOTDIR/bin/tmux-qp $DOTDIR
bind-key B neww $DOTDIR/bin/tmux-qp ~/brain/
bind-key I neww $DOTDIR/bin/cheat

# popups
bind-key N popup -E $DOTDIR/bin/quick-note -a
bind-key G popup -E -w 90% -h 95% "lazygit"
bind-key M popup -E -w 84 -h 90% "glow -p"

bind-key T popup -E $DOTDIR/bin/tmux-npm
# }}}

# -- COPY MODE ------------------------------------------------------------- {{{
# making the copy mode feel like inside of vim and handle the differences
# between macOS and Linux properly

set-window-option -g mode-keys vi
setw -g mode-keys vi

# start copy mode
bind-key Escape copy-mode

# bindings in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key p paste-buffer

if-shell "uname | grep -q Darwin" {
  bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
  bind-key C-c run 'tmux save-buffer - | pbcopy'; \
  bind-key C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
  bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
  bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
  bind-key C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

# }}}

# -- META (control) -------------------------------------------------------- {{{

# reload config
bind-key c-r source-file ~/.tmux.conf \; display "reloaded config"

# load session local config
bind-key c-l source-file .tmux.conf ; display 'sourced #{pane_current_path}/.tmux.conf'

bind-key c-x run $DOTDIR/bin/tmux-session-delete

# }}}

# vi: fen fdm=marker fdl=0
