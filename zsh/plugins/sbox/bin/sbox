#!/usr/bin/env zsh
zparseopts -D -E -F -A args t:: c:: l:: s::

SBOX_LAUNCHER=${SBOX_LAUNCHER:-tmux}

if [[ -z $SBOX_DIR ]]; then
  echo "\$SBOX_DIR not set"
  return 1
fi

SBOX_TEMPLATE_DIR="${SBOX_TEMPLATE_DIR:-$SBOX_DIR}"

if [[ -d $SBOX_TEMPLATE_DIR ]]; then
else
	echo "template dir not found: $SBOX_TEMPLATE_DIR"
	exit 1
fi

get-start-dir () { # {{{
	zparseopts -D -E -F -A args t: s::
	local name="${args[-s]}"
	local template="${args[-t]}"

	if [[ $name == ./* ]]; then
		# TODO: implement this
		echo "$(pwd)/${name#./}"
	else
		local datestamp="$(date "+%Y%m%d-%H%M")"
		local name_prefill=$(echo $template | sed 's/^[[:digit:]]*-[[:digit:]]*-//')

		if [[ -z $name ]]; then
			name="$(gum input --prompt="name: " --value="$name_prefill--")"
		fi

		if [[ -z $name ]]; then
			echo "cancelled" >&2
			exit 1
		fi

		name="$datestamp-$name"
		name=${name// /-}
		name=${name//[^[:alnum:]-]/}

		local full_path="$SBOX_DIR$name"
		if [[ ! -e $full_path ]]; then
			echo "$full_path"
		else
			echo "already exists: $full_path" >&2
			exit 1
		fi
	fi
} # }}}

choose-template () { # {{{
	zparseopts -D -E -F -A args t::
	local template="${args[-t]}"
	if [[ ! -z $template ]]; then
		if [[ -d "$SBOX_TEMPLATE_DIR/$template" ]]; then
			echo "$template"
			return
		else
			echo "template not found: $template" >&2
			return 1
		fi
	fi

	local -a templates=()
	for t in $(\ls -1 "$SBOX_TEMPLATE_DIR"); do
		templates+=("$t")
	done
	printf '%s\n' "${templates[@]}" \
		| fzf --height 40% --layout=reverse --prompt="Choose template: " --preview="cat $SBOX_TEMPLATE_DIR/{}/README.md"
} # }}}

build () { # {{{
	zparseopts -D -E -F -A args t: c:
	local target=${args[-c]}
	local template=${args[-t]}
	local origin="$SBOX_TEMPLATE_DIR${template}"
	
	if [[ ! -d $origin ]]; then
		echo "template not found: $origin" >&2
		exit 1
	fi

	mkdir -p "$target"

	pushd "$target" &> /dev/null
	
		rsync -av "$origin/" $target

		if [[ -f "$target/.sboxrc" ]]; then
			(source "$target/.sboxrc" && function -T setup && setup)
		fi

	popd &> /dev/null

} # }}}

git-init () { # {{{
	zparseopts -D -E -F -A args t: c:
	pushd "${args[-c]}" &> /dev/null
	git rev-parse --is-inside-work-tree &> /dev/null
	if [[ ! $? -eq 0 ]]; then
		git init
	fi
	git add ${args[-c]}
	git commit -m "initial commit from template: ${args[-t]}"
	popd &> /dev/null
} # }}}

launch () { # {{{
	zparseopts -D -E -F -A args c: l:
	local name="$(basename ${args[-c]})"
	local new_sbox="${args[-c]}"

	if [[ -z $1 ]]; then
		if [[ -f "$new_sbox/.sboxrc" ]]; then
			tmux new-session -d \
				-s "$name"        \
				-c "$new_sbox"    \
				"(source $new_sbox/.sboxrc && launch)"
		fi

		if [[ $TMUX ]]; then
			tmux switch-client -t=$name
		else
			tmux attach-session -t=$name
		fi
	fi
} # }}}

local template=$(choose-template -t "${args[-t]}")
if [[ -z $template ]]; then
  echo "abort: no template chosen"
  return;
fi

local new_sbox=$(get-start-dir -t "$template" -s "${args[-s]:-${@}}")
if [[ -z $new_sbox ]]; then
  echo "abort: no name given."
  return;
fi

local launcher="${args[-l]:-$SBOX_LAUNCHER}"

build         -c "$new_sbox" -t "$template" \
	&& git-init -c "$new_sbox" -t "$template" \
	&& launch   -c "$new_sbox" -l "$launcher"
