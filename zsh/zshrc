zmodload zsh/zprof # profile startup time

export TERM=xterm-kitty
export SBOX_TEMPLATE_DIR="$HOME/code/bleepbloop.git/main/templates/"

# {{{ compinit
autoload -Uz compinit
autoload -U +X bashcompinit && bashcompinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
	bashcompinit
done
compinit -C
bashcompinit -C

# }}}
# {{{ keybinds

autoload -U edit-command-line
autoload -U select-word-style
zle -N edit-command-line # Emacs style
bindkey -e                       # use emacs keybindings
bindkey '^xe' edit-command-line  # Enable Ctrl-x-e to edit command line
bindkey '^x^e' edit-command-line # + Ctrl-x-Ctrl-e for convenience
bindkey "^[" vi-cmd-mode         # use esc to enter vi-cmd-mode
bindkey "^6" pd

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# }}}
# {{{ load zsh plugins
# 

for plugin in "$DOTDIR"/zsh/plugins/*; do
	plugin=$(basename $plugin)
	plugin_path="$DOTDIR/zsh/plugins/$plugin/$plugin.plugin.zsh"
  if [[ -f "$plugin_path" ]]; then
    source $plugin_path
	else
		echo "Huh? Plugin $plugin has no $plugin_path?" >&2
  fi
done
# }}}
# {{{ 1password completion

if [[ -n `command -v op` ]]; then
  eval "$(op completion zsh)"
  compdef _op op
fi 

# }}}
# {{{ bun completion

if [[ -s "$BUN_INSTALL/_bun" ]]; then
	source "$BUN_INSTALL/_bun"
else
	echo "No bun?" >> $DOTLOG
fi

# }}}
# {{{ pnpm completion
if [[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]]; then
	source ~/.config/tabtab/zsh/__tabtab.zsh
else
	echo "No tabtab?" >> $DOTLOG
fi
# }}}
# {{{ history  settings
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt EXTENDED_HISTORY
setopt SHARE_HISTORY

export HISTFILE=~/.zsh_history
export HISTSIZE=99999
export SAVEHIST=99999
# }}}

eval "$(starship init zsh)"

# vim:foldmethod=marker:foldlevel=0
