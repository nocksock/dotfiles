zmodload zsh/zprof # profile startup time

export TERM=xterm-kitty

export SBOX_TEMPLATE_DIR="$HOME/code/bleepbloop.git/main/templates/"
export SBOX_DEFAULT_START_DIR_PARENT="$HOME/code/sandboxes/"
export SBOX_DEFAULT_LAUNCHER="tmux"

# {{{ compinit
autoload -Uz compinit
autoload -U +X bashcompinit && bashcompinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
	bashcompinit
done
compinit -C
bashcompinit -C

# }}}
# {{{ keybinds

autoload -U edit-command-line
autoload -U select-word-style
zle -N edit-command-line # Emacs style
bindkey -e                       # use emacs keybindings
bindkey '^f' edit-command-line #  like nvim command-mode
bindkey "^[" vi-cmd-mode         # use esc to enter vi-cmd-mode
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

export WORDCHARS="*?_.[]~!#$%^(){}<>" # removed =/&;.-

# }}}
# switch from bar to block depending on input mode {{{

set show-mode-in-prompt on
set vi-cmd-mode-string "\1\e[2 q\2"
set vi-ins-mode-string "\1\e[6 q\2"

# }}}
# {{{ 1password completion

if [[ -n `command -v op` ]]; then
  eval "$(op completion zsh)"
  compdef _op op
fi 

# }}}
# {{{ bun completion

if [[ -s "$BUN_INSTALL/_bun" ]]; then
	source "$BUN_INSTALL/_bun"
else
	echo "No bun?" >> $DOTLOG
fi

# }}}
# {{{ pnpm completion
if [[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]]; then
	source ~/.config/tabtab/zsh/__tabtab.zsh
else
	echo "No tabtab?" >> $DOTLOG
fi
# }}}
# {{{ history settings
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt EXTENDED_HISTORY
setopt SHARE_HISTORY

export HISTFILE=~/.zsh_history
export HISTSIZE=999999
export SAVEHIST=999999
# }}}

eval "$(starship init zsh)"

# vim:foldmethod=marker:foldlevel=0

# opam configuration
[[ ! -r /Users/nilsriedemann/.opam/opam-init/init.zsh ]] || source /Users/nilsriedemann/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null
