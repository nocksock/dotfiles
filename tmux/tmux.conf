# OPTIONS

# -- GLOBAL OPTIONS -------------------------------------------------------- {{{

# if-shell "uname | grep -q Darwin" {
#   set-option -g default-shell /Users/nilsriedemann/.nix-profile/bin/nu
# }

# set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g display-time 4000
set -g mouse on
set -g renumber-windows on
set -g history-limit 9999
set -g main-pane-width 33% # main is left by default, "swap" with right
set -g extended-keys always
set -g main-pane-height 75%
set -g base-index 1
setw -g pane-base-index 1
set -g repeat-time 1000
setw -g aggressive-resize on # more reasonable sizing with multiple clients

# Add truecolor support
set -g default-terminal "xterm-256color-italic"
set -ga terminal-overrides ",xterm*:Tc:smcup@:rmcup@"
set -ga terminal-overrides ",screen*:Tc:smcup@:rmcup@"
set -ga terminal-overrides ",tmux*:Tc:smcup@:rmcup@"

# }}}

# -- THEME ----------------------------------------------------------------- {{{
# Reference: https://man.openbsd.org/tmux.1#STYLES

set -g visual-activity on

set -g message-command-style bg=cyan,fg=colour233
set -g message-style bg=yellow,fg=black

set -g pane-active-border-style fg=colour8
set -g pane-border-lines single
set -g pane-border-style fg=colour0

set -g status-interval 60
set -g status-justify left
set -g status-style bg=default,fg=colour8

# left section
set -g status-left-length 0
set -g status-left '#[bg=cyan,fg=colour0]#(zsh_bleep_hostname)#[bg=default,fg=white] #S  '

# middle section
set -g window-status-format " #I  #W "
set -g window-status-current-format "#[fg=colour0,bg=colour4] #I #[bg=colour0,fg=white] #W "
set -g window-status-separator "#[fg=colour8]  #[default]"

# right section
set -g status-right-length 0
set -g status-right '#[bg=default,fg=colour8] #(pwd | sed "s|$HOME|~|")'


# reverse status in view and copymode - just to have bit more visiual feedback that i'm in a mode
set-hook -g pane-mode-changed 'if -F "#{m/r:(copy|view)-mode,#{pane_mode}}" "set status-style reverse" "set -u status-style"'

# }}}

# KEYBINDS

# -- CHANGE PREFIX --------------------------------------------------------- {{{

unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix
set -s escape-time 0 # "fixes" escape key waiting for another key to send it with alt (or something like that)

# }}}

# -- REPLACE DEFAULTS ------------------------------------------------------ {{{
bind-key F popup -E -w 80 -h 8 zsh -c tm-find
bind-key f popup -E -w 80 -h 8 zsh -c "tm-find -a"
# }}}

# -- NAVIGATION ------------------------------------------------------------ {{{

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key y last-window
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -n M-Right select-window -t :+1
bind-key -n M-Left select-window -t :-1
bind-key -n M-j swap-pane -D \; select-pane -D

bind-key s choose-tree -Zs -O name # make session-view order by name by default
bind-key b switch-client -l
bind-key -r c-b switch-client -l

bind -r D neww tm-p $DOTDIR

bind-key -r g run-shell ~/code/forks/harpoon/scripts/tmux/switch-back-to-nvim
# }}}

# -- LAYOUT ---------------------------------------------------------------- {{{

bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r - resize-pane -D 5
bind-key -r + resize-pane -U 5

bind-key Left swap-window -t -1  \; select-window -t -1
bind-key Right swap-window -t +1 \; select-window -t +1

bind-key -Tlayout 1 select-layout main-horizontal
bind-key -Tlayout 2 select-layout main-vertical
bind-key -Tlayout = select-layout tiled
bind-key -Tlayout m resize-pane -x 66% -y 75%
bind-key -Tlayout s resize-pane -x 36% -y 25%
bind-key -Tlayout -r n next-layout
bind-key -Tlayout -r p previous-layout
bind-key -Tlayout -r u select-layout -o # undo last change

bind-key Space switch-client -Tlayout

# -- }}}

# -- CREATE (shift) -------------------------------------------------------- {{{
# using shift because I was creating splits when I actually just wanted to
# navigate to other windows. Hence forcing me to move pinky to a different key.

# create splits
bind-key H split-window -hbf -l 33%
bind-key J split-window -f -l 25%
bind-key K split-window -bf -l 75%
bind-key L split-window -hf -l 66%

# quick project chooser
bind-key S popup -E -w 80% -h 80% zsh -c tm-p

# popups
bind-key N popup -w 97% -h 95% "zsh -c note"
bind-key G neww "lazygit"
bind-key B popup -w 80% -h 80% "zsh -c sbox"
bind-key T neww "nnn"

set -g -a command-alias 'glow=popup -E -w 84 -h 90% "glow -p"'
set -g -a command-alias 'n=neww -E -w 84 -h 90%'

# }}}

# -- COPY MODE ------------------------------------------------------------- {{{
# making the copy mode feel like inside of vim and handle the differences
# between macOS and Linux properly

set-window-option -g mode-keys vi
setw -g mode-keys vi

set -s command-alias[100] 'sbox-delete=run-shell tm-sbox-delete'

# start copy mode
bind-key Escape copy-mode

# bindings in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection

if-shell "uname | grep -q Darwin" {
  bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
  bind-key C-c run 'tmux save-buffer - | pbcopy'; \
  bind-key C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
  bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
  bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
  bind-key C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

# }}}

# -- META (control) -------------------------------------------------------- {{{

# reload config
bind-key c-r source-file ~/.tmux.conf \; display "reloaded config"
bind-key c-l source-file .tmux.conf \; display "sourced local config"

bind-key -r Left swap-window -t -1\; select-window -t -1
bind-key -r Right swap-window -t +1\; select-window -t +1

# delete currently active session (and switch to previous session)
bind-key c-x run tm-session-delete \; display "deleted session"

# }}}

# vi: fen fdm=marker fdl=0
