# vim:fileencoding=utf-8:foldmethod=marker:foldclose=all:foldopen=all:foldlevel=0
# tip: use `zk` and `zj` to navigate

# About the shortcuts
#
# ctrl+q and then it's pretty much first letter of the feature and then first
# letter of a verb. eg: ctrl+q>w>n -> [w]indow [n]ew. Or they take inspiraton
# from vim.

# System Settings {{{

listen_on                    unix:/tmp/kitty
allow_remote_control         yes
editor                       /opt/homebrew/bin/nvim
env                          KITTY_DEVELOP_FROM ~/code/forks/kitty/
enable_audio_bell            no
visual_bell_duration         0.100
remember_window_size         no
initial_window_height        20c
initial_window_width         90c
macos_traditional_fullscreen yes

# }}}
# Font Settings {{{

macos_thicken_font  0.0
font_size           15.0
adjust_line_height  150%
adjust_column_width 100%
adjust_baseline     0

# default font when non of the other fonts below is used
font_family      JetBrains Mono Light
bold_font        JetBrains Mono Bold
italic_font      JetBrains Mono Italic
bold_italic_font JetBrains Mono Bold Italic

# other fonts {{{

# bunch of other fonts I like to use occasionally. I leave them in for easy
# uncommenting.

# font_family      Ligconsolata Regular
# bold_font        Ligconsolata Regular
# italic_font      Ligconsolata Bold
# bold_italic_font Ligconsolata Bold 

# font_family      Dank Mono Regular
# bold_font        Dank Mono Bold
# italic_font      Dank Mono Italic
# bold_italic_font Dank Mono Bold Italic

# font_family      Operator Mono Medium
# bold_font        Operator Mono Bold
# bold_italic_font Operator Mono Bold Italic
# italic_font      Operator Mono Book Italic

# font_family      Menlo Regular
# bold_font        Menlo Bold
# italic_font      Menlo Italic
# bold_italic_font Menlo Bold Italic

# font_family      MonoLisa Book
# bold_font        MonoLisa Bold
# bold_italic_font MonoLisa Bold Italic
# italic_font      MonoLisa Book Italic

# font_family      Fira Code Regular
# bold_font        Fira Code Bold
# italic_font      Fira Code Italic
# bold_italic_font Fira Code Bold Italic

# font_family      Envy Code R Regular
# bold_font        Envy Code R Bold
# italic_font      Envy Code R Italic
# bold_italic_font Envy Code R Bold Italic

# font_family      Rec Mono Duotone Regular
# bold_font        Rec Mono Duotone Bold
# italic_font      Rec Mono Duotone Italic
# bold_italic_font Rec Mono Duotone Bold Italic

font_family      Rec Mono Casual Regular
bold_font        Rec Mono Casual Bold
italic_font      Rec Mono Casual Italic
bold_italic_font Rec Mono Casual Bold Italic

# font_family      Rec Mono Linear Regular
# bold_font        Rec Mono Linear Bold
# italic_font      Rec Mono Linear Italic
# bold_italic_font Rec Mono Linear Bold Italic

# font_family      Iosevka Slab Medium
# bold_font        Iosevka Slab Bold
# italic_font      Iosevka Slab Italic
# bold_italic_font Iosevka Slab Bold Italic

# font_family      Iosevka Snock Regular
# bold_font        Iosevka Snock Medium
# italic_font      Iosevka Snock Italic
# bold_italic_font Iosevka Snock Bold Italic

# font_family      Pragmata Pro Mono Regular
# bold_font        Pragmata Pro Mono Bold
# italic_font      Pragmata Pro Mono Italic
# bold_italic_font Pragmata Pro Mono Bold Italic

# }}}
# }}}
# UI Settings {{{

draw_minimal_borders         yes
dynamic_background_opacity   yes
enabled_layouts              tall:bias=70,tall:bias=70;mirrored=true,fat:bias=66,fat:bias=80,stack,splits
hide_window_decorations      titlebar-only
inactive_text_alpha          0.80
single_window_margin_width   8
tab_bar_align                left
tab_bar_edge                 top
tab_bar_margin_height        0.0 0.0
tab_bar_margin_width         8.0
tab_bar_style                separator
tab_separator                " "
tab_title_template           "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab} {title} "
window_border_width          0.0
window_margin_width          4
window_padding_width         8

# }}}
# Theme{{{

# BEGIN_KITTY_THEME
# RosÃ© Pine Dawn
include current-theme.conf
# END_KITTY_THEME

# }}}
# Shortcuts and key-settings {{{

kitty_mod            cmd+shift
macos_option_as_alt  right

# Common {{{

# Shortcuts to make kitty behave similar to most applications.

map cmd+k            no_op
map cmd+opt+s        no_op
map cmd+[            previous_window
map cmd+]            next_window
map cmd+x            close_window
map cmd+w            close_window
map cmd+shift+[      kitten smart_tab.py previous_tab cmd+shift+[
map cmd+shift+]      kitten smart_tab.py next_tab  cmd+shift+]

map cmd+t            new_tab
map kitty_mod+t      new_tab_with_cwd

map cmd+n            new_window_with_cwd
map kitty_mod+n      new_os_window
map cmd+o            launch --type=overlay --title="choose project" ~/code/dotfiles/bin/kitty-qp tab

map cmd+enter        launch --location=vsplit --cwd=current
map kitty_mod+enter  new_os_window

# this is usually whatever script etc I'm working on
map kitty_mod+equal change_font_size current +1.0
map kitty_mod+minus change_font_size current -1.0
map kitty_mod+0     change_font_size current 0.0

# }}}

# Base {{{

map kitty_mod+'   next_layout
map kitty_mod+f1  show_kitty_env_vars
map kitty_mod+f4  launch --stdin-source=@screen_scrollback --type=tab nvim -c "setlocal ft=man nonumber nolist showtabline foldcolumn=0" -c "autocmd VimEnter * normal G"

map ctrl+q>%      launch --location=vsplit --cwd=current
map ctrl+q>,      launch --type=os-window --cwd=~/code/dotfiles/ --title="dotfiles" --copy-env zsh -c "nvim kitty/kitty.conf"
map ctrl+q>c      close_window
map ctrl+q>f      launch --type=tab zsh -c "qf -e"
map ctrl+q>g      launch --type=tab --stdin-source @last_cmd_output --copy-env zsh -c "nvim -"
map ctrl+q>n      launch --cwd=current
map ctrl+q>s      launch --location=hsplit --cwd=current
map ctrl+q>v      launch --location=vsplit --cwd=current
map ctrl+q>z      toggle_layout stack
map ctrl+q>space  next_layout

map ctrl+q>ctrl+c      launch --stdin-source @last_cmd_output pbcopy

map ctrl+q>h      neighboring_window left
map ctrl+q>j      neighboring_window down
map ctrl+q>k      neighboring_window up
map ctrl+q>l      neighboring_window right

# shift: create context {{{
# all shortcuts with shift are meant to create a window/tab and usuall start
# some kind of picker

map ctrl+q>shift+j combine : launch --location=hsplit --cwd=current : resize_window shorter 1
map ctrl+q>shift+l combine : launch --location=vsplit --cwd=current : resize_window narrower 15
map ctrl+q>shift+b launch --type=tab --copy-env sbox


# }}}
# }}}

# Alpha {{{

map ctrl+q>a>1   set_background_opacity 1
map ctrl+q>a>2   set_background_opacity 0.8
map ctrl+q>a>3   set_background_opacity 0.4
map ctrl+q>a>l   set_background_opacity -0.1
map ctrl+q>a>m   set_background_opacity +0.1
map ctrl+q>a>r   set_background_opacity default

# }}}
# Tab {{{

map ctrl+q>t>r   set_tab_title
map ctrl+q>t>f2  set_tab_title
map ctrl+q>t>s   select_tab
map ctrl+q>t>c   close_tab
map ctrl+q>t>d   detach_tab ask
map ctrl+q>t>n   new_tab_with_cwd !neighbor

# }}}
# Font {{{

map ctrl+q>f>b   change_font_size current 30
map ctrl+q>f>s   change_font_size current 11
map ctrl+q>f>r   change_font_size current 15
map ctrl+q>f>B   change_font_size all 30
map ctrl+q>f>S   change_font_size all 11
map ctrl+q>f>R   change_font_size all 15

# }}}
# Grab output {{{

map ctrl+q>g>l  launch --type=tab --stdin-source @last_cmd_output --copy-env zsh -c "nvim -"

# }}}
# Open {{{

map ctrl+q>o>t  launch --type=overlay --copy-env zsh -c "tm-select | xargs kitty @ launch --type=tab --copy-env tmux attach -t"
map ctrl+q>o>n  launch --type=os-window --title="choose project" ~/code/dotfiles/bin/kitty-qp os-window
map ctrl+q>o>p  launch --type=overlay --title="choose project" ~/code/dotfiles/bin/kitty-qp tab

# }}}
# H[i]nts {{{
# or [i]nline hints

map ctrl+q>i>u  open_url_with_hints
# [h]ash
map ctrl+q>i>h  kitten hints --type hash --program - 
# [w]ord
map ctrl+q>i>w  kitten hints --type word --program - 
# [p]ath
map ctrl+q>i>p  kitten hints --type path --program - 
# [f]ile (both because I keep trying either)
map ctrl+q>i>f  kitten hints --type path --program - 
# [l]ine
map ctrl+q>i>l  kitten hints --type line --program - 

# }}}
# Marker {{{

map ctrl+q>m>c  create_marker
map ctrl+q>m>r  remove_marker
map ctrl+q>m>e  toggle_marker regex 1 \\bERROR\\b

# }}}
# Resizing {{{

map ctrl+option+h  resize_window narrower 6
map ctrl+option+j  resize_window shorter  6
map ctrl+option+k  resize_window taller   6
map ctrl+option+l  resize_window wider    6
map ctrl+left      resize_window narrower 6
map ctrl+right     resize_window wider    6
map ctrl+up        resize_window taller   6
map ctrl+down      resize_window shorter  6

# }}}
# Scrolling {{{

map ctrl+q>s>p  scroll_to_prompt -1
map ctrl+q>s>n  scroll_to_prompt 1
map ctrl+q>s>r  scroll_to_prompt 0
map ctrl+q>s>t  scroll_prompt_to_top
map ctrl+q>s>b  scroll_prompt_to_bottom

# }}}
# sYstem {{{

map ctrl+q>y>r  load_config_file
map ctrl+q>y>s  kitty_shell window
map ctrl+q>y>t  kitten themes
map ctrl+q>y>h  show_kitty_doc overview

# }}}
# Window (vimlike) {{{

map ctrl+q>w>=          resize_window reset
map ctrl+q>w>c          close_window
map ctrl+q>w>c+shift    close_os_window
map ctrl+q>w>d          detach_window ask
map ctrl+q>w>n          new_window_with_cwd
map ctrl+q>w>N+shift    new_window
map ctrl+q>w>o>n        new_os_window_with_cwd
map ctrl+q>w>o>N+shift  new_os_window
map ctrl+q>w>r          layout_action rotate
map ctrl+q>w>s          launch --location=hsplit --cwd=current
map ctrl+q>w>S+shift    launch --location=hsplit
map ctrl+q>w>T+shift    detach_window new_tab
map ctrl+q>w>v          launch --location=vsplit --cwd=current
map ctrl+q>w>v+shift    launch --location=vsplit
map ctrl+q>w>x          swap_with_window
map ctrl+q>w>z          toggle_layout stack

# }}}
# }}}
