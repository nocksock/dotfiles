#autoload

usage() { cat <<EOF
  Usage pickard [<PICKER> [<action> [<args>]]]

  Options:
    -h, --help      Show this message

  Actions:
    --launch, -x  convenience method that Handles labels and prefixes
                  to open in external apps etc.

  Examples:
    pickard                            # starts the main picker
    pickard projects                   # starts the projects picker
    pickard projects --list            # lists the projects
    pickard projects --pick <index>    # echoes the project at <index> from list
    pickard projects --view <index>    # creates the preview for the project at <index> from list
    pickars projects --open <index>    # opens the project at <index> from list
EOF
}

pickard-init-pick () {
  ls -1 $PICKARD_PATH/picker \
    | fzf --no-sort --track --reverse
}

zparseopts -D -E -A opts -help=h -exec=x -launch x -type:: -label:: l:: t:: --

pickard-init-launch() {
  pickard-log "Launching \"$@\" with \"$opts\""
  local cmd=${@}
  local label=${opts[--label]:-$opts[-l]}
  local type=${opts[--type]:-$opts[-t]}

  case $type in
    kitty) 
      local pid=$(kitty @ launch --type=os-window --title $label --cwd="$HOME" --hold zsh -c "$cmd" &)
      kitty @ close-window -m "id:$KITTY_WINDOW_ID" &
      kitty @ focus-window -m "id:$pid" &
      ;;
    tmux)  tmux new-window -n $label $cmd ;;
    *) notify-send -m "eval $cmd" ;;
  esac
}

if [[ -n $opts[(i)--launch] ]]; then
  pickard-init-launch ${@}
  return 0
fi

if [[ -n ${opts[(i)--help]} || -n ${opts[(i):-h]} ]]; then
  usage
  return 0
fi

pickard-log "Invoked with \"$@\""
PICKER=${1:-$(pickard-init-pick)}

if [[ -n $PICKER ]]; then
  PICKER_PATH="$PICKARD_PATH/picker/$PICKER" 

  if [[ ! -f $PICKER_PATH ]]; then
    echo
    echo "Error: $PICKER is not a valid picker"
    echo
    return 1
  fi

   $PICKER_PATH ${@:2}
 else
	 echo "No picker selected"
  return 1
fi
